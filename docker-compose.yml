services:
  db:
    image: postgres:16-alpine 
    container_name: task_manager_db
    restart: always 
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: task_manager_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    
    # Adicionado: Configuração de Healthcheck para verificar se o DB está pronto
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"] 
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  # SERVIÇO DE BACK-END (NEST.JS)
  backend:
    build:
      context: ./backend 
      dockerfile: Dockerfile
      target: production
    container_name: task_manager_backend
    restart: unless-stopped
    ports:
      - "3000:3000" 
    environment:
      DATABASE_HOST: db 
      DATABASE_PORT: 5432
      DATABASE_USER: user
      DATABASE_PASSWORD: password
      DATABASE_NAME: task_manager_db
      JWT_SECRET: "sua_chave_secreta_aqui" 
    
    # Alterado: Depende da condição 'service_healthy' do DB para iniciar
    depends_on:
      db:
        condition: service_healthy

# SERVIÇO DE FRONT-END (REACT/NGINX)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: task_manager_frontend
    restart: unless-stopped
    ports:
      - "8080:80" 
    environment:
      REACT_APP_API_URL: http://localhost:3000 
    
    # Mantido: Depende do backend apenas para garantia de ordem
    depends_on:
      - backend

volumes:
  postgres_data: